{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["names","Function","useState","newplayer","setNewPlayer","players","setPlayer","className","value","type","onChange","e","target","placeholder","onClick","newList","concat","id","uuidv4","name","map","item","newlist","filter","delPlayer","reportWebVitals","onPerfEntry","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6KAIMA,EAAQ,GAqDCC,EAnDE,WAEf,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA6BF,mBAASF,GAAtC,mBAAOK,EAAP,KAAgBC,EAAhB,KAiBA,OACE,sBAAKC,UAAU,WAAf,UACE,qBAAKA,UAAU,SAAf,SACE,8CAIF,sBAAKA,UAAU,WAAf,UACE,sBAAKA,UAAU,WAAf,UACE,uBAAOC,MAAOL,EAAWM,KAAK,OAAOC,SAxB7C,SAAmBC,GACjBP,EAAaO,EAAEC,OAAOJ,QAuB0CK,YAAY,oBACtE,wBAASC,QArBjB,WACE,IAAMC,EAAUV,EAAQW,OAAO,CAAEC,GAAIC,cAAUC,KAAMhB,IACrDG,EAAUS,GACVX,EAAa,KAkBP,kBAEF,qBAAKG,UAAU,YAAf,SACE,6BACGF,EAAQe,KAAI,SAACC,GACZ,OACA,+BACE,wBAASP,QAAS,kBAtBhC,SAAmBG,GACjB,IAAMK,EAAUjB,EAAQkB,QAAO,SAAAF,GAAI,OAAIA,EAAKJ,KAAOA,KACnDX,EAAUgB,GAoB0BE,CAAUH,EAAKJ,KAAvC,eACCI,EAAKF,OAFEE,EAAKJ,kBC9BdQ,EAZS,SAAAC,GAClBA,GAAeA,aAAuBzB,UACxC,6BAAqB0B,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.079eaa19.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { v4 as uuidv4 } from 'uuid';\nimport './index.css'\n\nconst names = [];\n\nconst Function = () => {\n\n  const [newplayer, setNewPlayer] = useState('');\n  const [players, setPlayer] = useState(names);\n\n  function setChange(e) {\n    setNewPlayer(e.target.value);\n  }\n\n  function addPlayer() {\n    const newList = players.concat({ id: uuidv4(), name: newplayer });\n    setPlayer(newList);\n    setNewPlayer('');\n  }\n\n  function delPlayer(id) {\n    const newlist = players.filter(item => item.id !== id);\n    setPlayer(newlist);\n  }\n\n  return (\n    <div className='outerbox'>\n      <div className='header'>\n        <h1>\n          To-Do List\n        </h1>\n      </div>\n      <div className='innerbox'>\n        <div className='inputBox'>\n          <input value={newplayer} type='text' onChange={setChange} placeholder='Enter your task' />\n          <button  onClick={addPlayer}>+</button>\n        </div>\n        <div className='listItems'>\n          <ul>\n            {players.map((item) => {\n              return (\n              <li  key={item.id}>\n                <button  onClick={() => delPlayer(item.id)}>X</button>\n                {item.name}\n              </li>\n              )\n            })}\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n}\n\n\n\nexport default Function;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Function from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Function />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}